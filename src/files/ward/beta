{"pc":{"properties":{},"schematic":[["gates:dreg",[-24,-80,0]],["port",[-24,-64,0],{"signal":"CLK"}],["port",[16,-80,2],{"signal":"PC[31:2]"}],["port",[16,-40,2],{"signal":"PC[1:0]"}],["port",[-24,-80,0],{"signal":"NPC[31:2]"}],["gates:mux2",[56,24,0]],["gates:mux4",[-56,16,0]],["port",[-48,80,0],{"signal":"PCSEL[1:0]"}],["port",[-48,96,0],{"signal":"PCSEL[2]"}],["port",[152,24,2],{"signal":"NPC[31:2]"}],["port",[-56,64,0],{"signal":"PC[31],PCINC[30:2]"}],["port",[-56,48,0],{"signal":"PC[31],BT[30:2]"}],["port",[-56,32,0],{"signal":"JT[31:2]"}],["port",[-56,16,0],{"signal":"VEC_ILLOP[31:2]"}],["port",[56,24,0],{"signal":"VEC_XINT[31:2]"}],["text",[-135,-104,0],{"text":"Here's the actual PC: a 30-bit register"}],["text",[-116,-8,0],{"text":"Here's the next-PC logic:"}],["port",[-48,112,0],{"signal":"RESET"}],["port",[-56,160,0],{"signal":"PC[30:2]"}],["port",[-56,192,2],{"signal":"PCINC[30:2]"}],["text",[-328,-65,0],{"text":"Interrupt vectors (low addresses):"}],["beta:inc29",[-56,184,0]],["beta:ZERO",[24,-32,0]],["port",[-264,40,0],{"signal":"JT[31:2]"}],["beta:ZERO",[-272,32,2]],["text",[-319,23,0],{"text":"Temporary, for testing:"}],["port",[-264,56,0],{"signal":"BT[30:2]"}],["beta:ZERO",[-272,48,2]],["wire",[64,96,0,0,-40]],["gates:mux2",[136,16,0]],["wire",[144,112,0,0,-64]],["port",[136,-8,0],{"signal":"VEC_RESET[31:2]"}],["wire",[136,-8,0,0,24]],["wire",[72,32,0,64,0],{"signal":"YPC[31:2]"}],["port",[-248,-48,0],{"signal":"VEC_RESET[31:0]"}],["jumper",[-248,-48,0]],["port",[-240,-48,2],{"signal":"0x80000000'32"}],["port",[-248,-32,0],{"signal":"VEC_ILLOP[31:0]"}],["port",[-248,-16,0],{"signal":"VEC_XINT[31:0]"}],["jumper",[-248,-32,0]],["port",[-240,-32,2],{"signal":"0x80000004'32"}],["jumper",[-248,-16,0]],["port",[-240,-16,2],{"signal":"0x80000008'32"}],["wire",[-40,40,0,96,0],{"signal":"XPC[31:2]"}],["wire",[64,96,0,-112,0]],["wire",[-48,112,0,192,0]],["text",[-327,-128,0],{"text":"Beta PC Subsystem","font":"12pt sans-serif"}]],"icon":[["line",[-32,-24,0,0,32]],["line",[-32,8,0,48,0]],["line",[16,8,0,0,-32]],["line",[16,-24,0,-48,0]],["text",[-8,-8,0],{"text":"PC","align":"center","font":"14pt sans-serif"}],["line",[-32,-2,0,5,3]],["line",[-27,1,0,-5,2]],["terminal",[-40,-8,0],{"name":"RESET"}],["terminal",[-40,0,0],{"name":"CLK"}],["terminal",[8,-32,1],{"name":"BT[30:2]"}],["terminal",[-24,-32,1],{"name":"JT[31:2]"}],["terminal",[-40,-16,0],{"name":"PCSEL[2:0]"}],["terminal",[24,-16,2],{"name":"PC[31:0]"}],["terminal",[24,-8,2],{"name":"PCINC[30:2]"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n// test actions are applied to named groups of signals.\n// A signal can appear in more than one group.  Order\n// of groups and signals within each group determine \n// order of values on each line of test values\n.group inputs RESET PCSEL[2:0]\n.group outputs PC[31:0]\n\n// set type of simulation to be performed\n//  device -- transient simulation; components must be from from analog library\n//  gate -- gate-level simulation; components must be from gates library\n.mode gate\n\n/*\nTests are sequences of lines supplying test values; .cycle specifies\nthe sequence of actions that will be performed for each test.  Available\nactions are\n   assert group -- set values for signals in group with H,L test values\n   deassert group -- stop setting values for signals in group with H,L test values\n   sample group -- check values of signals in group with 0,1 test values\n   tran time -- run simulation for specified time interval\n   signal=val -- set signal to specified value\n*/\n.cycle CLK=0 assert inputs tran 99n CLK=1 sample outputs tran 1n\n\n// the tests themselves -- one test per line\n//   to assert signal this cycle use 0,1; use Z or - if not to be asserted\n//   to sample signal this cycle use L,H; use - if not to be sampled\n// whitespace can be used to improve readability, non-blank characters\n// are associated, in order, with signals listed in .group above.\n\n// test reset:\n 0 000 --------------------------------\n 1 000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\n\n// test increment: PCSEL=1\n\n\n// (optional) produce plots showing the test inputs and/or outputs\n.plot CLK\n.plot RESET\n.plot X(PCSEL[2:0])\n.plot X(PC[31:0])\n.plot X(NPC[31:3])\n\n"]]},"inc29":{"properties":{},"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n// test actions are applied to named groups of signals.\n// A signal can appear in more than one group.  Order\n// of groups and signals within each group determine \n// order of values on each line of test values\n.group inputs P[30:2]\n.group outputs N[30:2]\n\n// set type of simulation to be performed\n//  device -- transient simulation; components must be from from analog library\n//  gate -- gate-level simulation; components must be from gates library\n.mode gate\n\n/*\nTests are sequences of lines supplying test values; .cycle specifies\nthe sequence of actions that will be performed for each test.  Available\nactions are\n   assert group -- set values for signals in group with H,L test values\n   deassert group -- stop setting values for signals in group with H,L test values\n   sample group -- check values of signals in group with 0,1 test values\n   tran time -- run simulation for specified time interval\n   signal=val -- set signal to specified value\n*/\n.cycle assert inputs tran 9n sample outputs tran 1n\n\n// the tests themselves -- one test per line\n//   to assert signal this cycle use 0,1; use Z or - if not to be asserted\n//   to sample signal this cycle use L,H; use - if not to be sampled\n// whitespace can be used to improve readability, non-blank characters\n// are associated, in order, with signals listed in .group above.\n\n\n// .......... P[31:0] .......... .......... N[31:0] ..........\n   00000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLH\n   00000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLHL\n   00000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLH\n   00000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLHH\n   00000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLHL\n   00000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLHLH\n   00000000000000000000000000011 LLLLLLLLLLLLLLLLLLLLLLLLLLHLL\n   00000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLHLLH\n   00000000000000000000000000111 LLLLLLLLLLLLLLLLLLLLLLLLLHLLL\n   00000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLHLLLH\n   00000000000000000000000001111 LLLLLLLLLLLLLLLLLLLLLLLLHLLLL\n   00000000000000000000000100000 LLLLLLLLLLLLLLLLLLLLLLLHLLLLH\n   00000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLHLLLLL\n   00000000000000000000001000000 LLLLLLLLLLLLLLLLLLLLLLHLLLLLH\n   00000000000000000000000111111 LLLLLLLLLLLLLLLLLLLLLLHLLLLLL\n   00000000000000000000010000000 LLLLLLLLLLLLLLLLLLLLLHLLLLLLH\n   00000000000000000000001111111 LLLLLLLLLLLLLLLLLLLLLHLLLLLLL\n   00000000000000000000100000000 LLLLLLLLLLLLLLLLLLLLHLLLLLLLH\n   00000000000000000000011111111 LLLLLLLLLLLLLLLLLLLLHLLLLLLLL\n   00000000000000000001000000000 LLLLLLLLLLLLLLLLLLLHLLLLLLLLH\n   00000000000000000000111111111 LLLLLLLLLLLLLLLLLLLHLLLLLLLLL\n   00000000000000000010000000000 LLLLLLLLLLLLLLLLLLHLLLLLLLLLH\n   00000000000000000001111111111 LLLLLLLLLLLLLLLLLLHLLLLLLLLLL\n   00000000000000000100000000000 LLLLLLLLLLLLLLLLLHLLLLLLLLLLH\n   00000000000000000011111111111 LLLLLLLLLLLLLLLLLHLLLLLLLLLLL\n   00000000000000001000000000000 LLLLLLLLLLLLLLLLHLLLLLLLLLLLH\n   00000000000000000111111111111 LLLLLLLLLLLLLLLLHLLLLLLLLLLLL\n   00000000000000010000000000000 LLLLLLLLLLLLLLLHLLLLLLLLLLLLH\n   00000000000000001111111111111 LLLLLLLLLLLLLLLHLLLLLLLLLLLLL\n   00000000000000100000000000000 LLLLLLLLLLLLLLHLLLLLLLLLLLLLH\n   00000000000000011111111111111 LLLLLLLLLLLLLLHLLLLLLLLLLLLLL\n   00000000000001000000000000000 LLLLLLLLLLLLLHLLLLLLLLLLLLLLH\n   00000000000000111111111111111 LLLLLLLLLLLLLHLLLLLLLLLLLLLLL\n   00000000000010000000000000000 LLLLLLLLLLLLHLLLLLLLLLLLLLLLH\n   00000000000001111111111111111 LLLLLLLLLLLLHLLLLLLLLLLLLLLLL\n   00000000000100000000000000000 LLLLLLLLLLLHLLLLLLLLLLLLLLLLH\n   00000000000011111111111111111 LLLLLLLLLLLHLLLLLLLLLLLLLLLLL\n   00000000001000000000000000000 LLLLLLLLLLHLLLLLLLLLLLLLLLLLH\n   00000000000111111111111111111 LLLLLLLLLLHLLLLLLLLLLLLLLLLLL\n   00000000010000000000000000000 LLLLLLLLLHLLLLLLLLLLLLLLLLLLH\n   00000000001111111111111111111 LLLLLLLLLHLLLLLLLLLLLLLLLLLLL\n   00000000100000000000000000000 LLLLLLLLHLLLLLLLLLLLLLLLLLLLH\n   00000000011111111111111111111 LLLLLLLLHLLLLLLLLLLLLLLLLLLLL\n   00000001000000000000000000000 LLLLLLLHLLLLLLLLLLLLLLLLLLLLH\n   00000000111111111111111111111 LLLLLLLHLLLLLLLLLLLLLLLLLLLLL\n   00000010000000000000000000000 LLLLLLHLLLLLLLLLLLLLLLLLLLLLH\n   00000001111111111111111111111 LLLLLLHLLLLLLLLLLLLLLLLLLLLLL\n   00000100000000000000000000000 LLLLLHLLLLLLLLLLLLLLLLLLLLLLH\n   00000011111111111111111111111 LLLLLHLLLLLLLLLLLLLLLLLLLLLLL\n   00001000000000000000000000000 LLLLHLLLLLLLLLLLLLLLLLLLLLLLH\n   00000111111111111111111111111 LLLLHLLLLLLLLLLLLLLLLLLLLLLLL\n   00010000000000000000000000000 LLLHLLLLLLLLLLLLLLLLLLLLLLLLH\n   00001111111111111111111111111 LLLHLLLLLLLLLLLLLLLLLLLLLLLLL\n   00100000000000000000000000000 LLHLLLLLLLLLLLLLLLLLLLLLLLLLH\n   00011111111111111111111111111 LLHLLLLLLLLLLLLLLLLLLLLLLLLLL\n   01000000000000000000000000000 LHLLLLLLLLLLLLLLLLLLLLLLLLLLH\n   00111111111111111111111111111 LHLLLLLLLLLLLLLLLLLLLLLLLLLLL\n   10000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLH\n   01111111111111111111111111111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLL\n   00000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLH\n   11111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLL\n\n// (optional) produce plots showing the test inputs and/or outputs\n.plot P[30:2]\n.plot N[30:2]\n\n"]],"icon":[["line",[-40,-16,0,0,16]],["line",[-40,0,0,80,0]],["line",[-40,-16,0,80,0]],["line",[40,-16,0,0,16]],["text",[0,-8,0],{"text":"+1","align":"center","font":"12pt sans-serif"}],["terminal",[0,-24,1],{"name":"P[30:2]"}],["terminal",[0,8,3],{"name":"N[30:2]"}]],"schematic":[["text",[-128,-80,0],{"text":"29-bit incrementor for Beta PC"}],["port",[104,-24,1],{"signal":"P[5:2]"}],["port",[72,-24,1],{"signal":"P[9:6]"}],["port",[40,-24,1],{"signal":"P[13:10]"}],["port",[8,-24,1],{"signal":"P[17:14]"}],["port",[-24,-24,1],{"signal":"P[21:18]"}],["port",[-56,-24,1],{"signal":"P[25:22]"}],["port",[-88,-24,1],{"signal":"P[29:26]"}],["port",[-120,-24,1],{"signal":"P[30]"}],["port",[104,8,3],{"signal":"N[5:2]"}],["port",[72,8,3],{"signal":"N[9:6]"}],["port",[40,8,3],{"signal":"N[13:10]"}],["port",[8,8,3],{"signal":"N[17:14]"}],["port",[-24,8,3],{"signal":"N[21:18]"}],["port",[-56,8,3],{"signal":"N[25:22]"}],["port",[-88,8,3],{"signal":"N[29:26]"}],["port",[-120,8,3],{"signal":"N[30]"}],["beta:inc4",[104,-8,0]],["beta:inc4",[72,-8,0]],["beta:inc4",[40,-8,0]],["beta:inc4",[8,-8,0]],["beta:inc4",[-24,-8,0]],["beta:inc4",[-56,-8,0]],["beta:inc4",[-88,-8,0]],["beta:ha",[-112,8,0]],["beta:ONE",[112,-16,2]]]},"ZERO":{"properties":{},"schematic":[["port",[-40,-32,0],{"signal":"Z"}],["ground",[-32,-32,0]],["jumper",[-40,-32,0]]],"icon":[["terminal",[-8,-8,0],{"name":"Z"}],["text",[-18,-8,0],{"text":"0"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group outputs Z\n.cycle tran 1n sample outputs tran 1n\n1\n\n.plot Z\n\n"]]},"inc4":{"properties":{},"schematic":[["port",[-24,-40,1],{"signal":"A[3]"}],["port",[8,-40,1],{"signal":"A[2]"}],["port",[40,-40,1],{"signal":"A[1]"}],["port",[72,-40,1],{"signal":"A[0]"}],["port",[-24,-8,3],{"signal":"S[3]"}],["port",[8,-8,3],{"signal":"S[2]"}],["port",[40,-8,3],{"signal":"S[1]"}],["port",[72,-8,3],{"signal":"S[0]"}],["port",[-40,-24,0],{"signal":"Cout"}],["port",[88,-24,2],{"signal":"Cin"}],["beta:ha",[80,-8,0]],["beta:ha",[48,-8,0]],["beta:ha",[16,-8,0]],["beta:ha",[-16,-8,0]],["text",[-73,-102,0],{"text":"4-bit Incrementor"}]],"icon":[["line",[-8,-8,0,0,16]],["line",[-8,8,0,16,0]],["line",[8,8,0,0,-16]],["line",[8,-8,0,-16,0]],["text",[0,0,0],{"text":"INC4","font":"5pt sans-serif","align":"center"}],["terminal",[0,-16,1],{"name":"A[3:0]"}],["terminal",[0,16,3],{"name":"S[3:0]"}],["terminal",[16,0,2],{"name":"Cin"}],["terminal",[-16,0,0],{"name":"Cout"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n// test actions are applied to named groups of signals.\n// A signal can appear in more than one group.  Order\n// of groups and signals within each group determine \n// order of values on each line of test values\n.group inputs A[3:0] Cin\n.group outputs S[3:0] Cout\n\n// set type of simulation to be performed\n//  device -- transient simulation; components must be from from analog library\n//  gate -- gate-level simulation; components must be from gates library\n.mode gate\n\n/*\nTests are sequences of lines supplying test values; .cycle specifies\nthe sequence of actions that will be performed for each test.  Available\nactions are\n   assert group -- set values for signals in group with H,L test values\n   deassert group -- stop setting values for signals in group with H,L test values\n   sample group -- check values of signals in group with 0,1 test values\n   tran time -- run simulation for specified time interval\n   signal=val -- set signal to specified value\n*/\n.cycle assert inputs tran 9n sample outputs tran 1n\n\n\n// Try Cin=0:\n   0000 0 LLLL L\n   1111 0 HHHH L\n   1010 0 HLHL L\n   0101 0 LHLH L\n\n// With Cin=1, it should increment:\n   0000 1 LLLH L\n   0001 1 LLHL L\n   0010 1 LLHH L\n   0011 1 LHLL L\n   0100 1 LHLH L\n   0101 1 LHHL L\n   0110 1 LHHH L\n   0111 1 HLLL L\n   1000 1 HLLH L\n   1001 1 HLHL L\n   1010 1 HLHH L\n   1011 1 HHLL L\n   1100 1 HHLH L\n   1101 1 HHHL L\n   1110 1 HHHH L\n   1111 1 LLLL H\n\n// (optional) produce plots showing the test inputs and/or outputs\n.plot A[3:0] Cin S[3:0] Cout\n\n"]]},"ha":{"properties":{},"schematic":[["gates:xor2",[-32,-48,0]],["gates:and2",[-32,-16,0]],["port",[-32,-48,0],{"signal":"A"}],["port",[-32,-32,0],{"signal":"B"}],["port",[-32,-16,0],{"signal":"A"}],["port",[-32,0,0],{"signal":"B"}],["port",[16,-40,2],{"signal":"S"}],["port",[16,-8,2],{"signal":"C"}],["text",[-112,-88,0],{"text":"Simple Half Adder"}]],"icon":[["terminal",[8,-16,2],{"name":"A"}],["terminal",[-8,-32,1],{"name":"B"}],["circle",[-8,-16,0,8]],["terminal",[-8,0,3],{"name":"S"}],["terminal",[-24,-16,0],{"name":"C"}],["text",[-8,-16,0],{"text":"HA","font":"8pt sans-serif","align":"center"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n// test actions are applied to named groups of signals.\n// A signal can appear in more than one group.  Order\n// of groups and signals within each group determine \n// order of values on each line of test values\n.group inputs A B\n.group outputs S C\n\n// set type of simulation to be performed\n//  device -- transient simulation; components must be from from analog library\n//  gate -- gate-level simulation; components must be from gates library\n.mode gate\n\n.cycle assert inputs tran .9n sample outputs tran .1n\n00 LL\n01 HL\n10 HL\n11 LH\n\n.plot A,B,S,C\n"]]},"ONE":{"properties":{"tran_tstop":"1"},"schematic":[["port",[-48,-32,0],{"signal":"Z"}],["vdd",[-40,-32,0]],["jumper",[-48,-32,6]]],"icon":[["terminal",[-8,-8,0],{"name":"Z"}],["text",[-19,-8,0],{"text":"1"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group outputs Z\n.cycle tran 1n sample outputs tran 1n\n1\n\n.plot Z\n"]]},"fa":{"properties":{},"schematic":[["port",[-16,-72,1],{"signal":"A"}],["port",[0,-56,2],{"signal":"Cin"}],["port",[-88,0,1],{"signal":"B"}],["gates:or2",[-104,16,2]],["wire",[-72,16,0,56,0]],["port",[-152,8,0],{"signal":"Cout"}],["port",[-88,32,3],{"signal":"S"}],["beta:ha",[-8,-40,0]],["beta:ha",[-80,32,0]],["wire",[-16,-40,0,0,56]],["wire",[-32,-56,0,-72,0]],["wire",[-104,-56,0,0,56]]],"icon":[["line",[-24,-24,0,0,40]],["line",[-24,-24,0,40,0]],["line",[16,-24,0,0,40]],["line",[16,16,0,-40,0]],["terminal",[-16,-32,1],{"name":"A"}],["terminal",[8,-32,1],{"name":"B"}],["terminal",[24,-8,2],{"name":"Cin"}],["terminal",[-32,-8,0],{"name":"Cout"}],["terminal",[-8,24,3],{"name":"S"}],["text",[-4,-4,0],{"text":"FA","font":"12pt sans-serif","align":"center"}]],"test":[["test",".power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A B Cin\n.group outputs S Cout\n.mode gate\n\n.cycle assert inputs tran 9n sample outputs tran 1n\n000 0 0\n001 1 0\n010 1 0\n011 0 1\n100 1 0\n101 0 1\n110 0 1\n111 1 1\n\n// check propagation delay:\n000 0 0\n111 1 1\n\n.plot A B Cin\n.plot S Cout\n"]]},"add4":{"properties":{},"schematic":[["port",[80,-48,1],{"signal":"A[0]"}],["port",[56,-48,1],{"signal":"B[0]"}],["port",[24,-48,1],{"signal":"A[1]"}],["port",[0,-48,1],{"signal":"B[1]"}],["port",[-32,-48,1],{"signal":"A[2]"}],["port",[-56,-48,1],{"signal":"B[2]"}],["port",[-88,-48,1],{"signal":"A[3]"}],["port",[-112,-48,1],{"signal":"B[3]"}],["port",[-104,8,3],{"signal":"S[3]"}],["port",[-48,8,3],{"signal":"S[2]"}],["port",[8,8,3],{"signal":"S[1]"}],["port",[64,8,3],{"signal":"S[0]"}],["port",[96,-24,2],{"signal":"Cin"}],["port",[-128,-24,0],{"signal":"Cout"}],["beta:fa",[72,-16,0]],["beta:fa",[16,-16,0]],["beta:fa",[-40,-16,0]],["beta:fa",[-96,-16,0]]],"icon":[["line",[-32,-16,0,0,16]],["line",[-32,-16,0,48,0]],["line",[16,-16,0,0,16]],["line",[16,0,0,-48,0]],["terminal",[-24,-24,1],{"name":"B[3:0]"}],["terminal",[8,-24,1],{"name":"A[3:0]"}],["terminal",[-8,8,3],{"name":"S[3:0]"}],["terminal",[-40,-8,0],{"name":"Cout"}],["terminal",[24,-8,2],{"name":"Cin"}],["text",[-8,-8,0],{"text":"+4","font":"12pt sans-serif","align":"center"}]],"test":[["test",".power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A[3:0] B[3:0] Cin\n.group outputs S[3:0] Cout\n\n.mode gate\n\n.cycle assert inputs tran 9n sample outputs tran 1n\n\n// AAAA BBBB Cin SSSS Cout\n\n   0000 0000 0   LLLL L\n   0001 0000 0   LLLH L\n   0000 0001 0   LLLH L\n   0001 0001 0   LLHL L\n\n   1111 0000 0   HHHH L\n   1111 0001 0   LLLL H\n   0001 1111 0   LLLL H\n   1111 1111 0   HHHL H\n\n   0000 0000 1   LLLH L\n   1111 0000 1   LLLL H\n   0000 1111 1   LLLL H\n\n.plot A[3:0] B[3:0] Cin\n.plot S[3:0] Cout\n"]]},"add16":{"properties":{},"schematic":[["port",[80,-40,1],{"signal":"A[3:0]"}],["port",[48,-40,1],{"signal":"B[3:0]"}],["port",[16,-40,1],{"signal":"A[7:4]"}],["port",[-16,-40,1],{"signal":"B[7:4]"}],["port",[-48,-40,1],{"signal":"A[11:8]"}],["port",[-80,-40,1],{"signal":"B[11:8]"}],["port",[-112,-40,1],{"signal":"A[15:12]"}],["port",[-144,-40,1],{"signal":"B[15:12]"}],["port",[-128,-8,3],{"signal":"S[15:12]"}],["port",[-64,-8,3],{"signal":"S[11:8]"}],["port",[0,-8,3],{"signal":"S[7:4]"}],["port",[64,-8,3],{"signal":"S[3:0]"}],["port",[96,-24,2],{"signal":"Cin"}],["port",[-160,-24,0],{"signal":"Cout"}],["beta:add4",[72,-16,0]],["beta:add4",[8,-16,0]],["beta:add4",[-56,-16,0]],["beta:add4",[-120,-16,0]]],"icon":[["line",[-32,-16,0,0,16]],["line",[-32,-16,0,48,0]],["line",[16,-16,0,0,16]],["line",[16,0,0,-48,0]],["terminal",[-24,-24,1],{"name":"B[15:0]"}],["terminal",[8,-24,1],{"name":"A[15:0]"}],["terminal",[-8,8,3],{"name":"S[15:0]"}],["terminal",[-40,-8,0],{"name":"Cout"}],["terminal",[24,-8,2],{"name":"Cin"}],["text",[-8,-8,0],{"text":"+16","font":"12pt sans-serif","align":"center"}]],"test":[["test","// 16-bit ripple carry adder\n\n.power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A[15:0] B[15:0] Cin\n.group outputs S[15:0] Cout\n.mode gate\n.cycle assert inputs tran 9n sample outputs tran 1n\n\n// AAAAAAAAAAAAAAAA BBBBBBBBBBBBBBBB Cin SSSSSSSSSSSSSSSS Cout\n\n   0000000000000000 0000000000000000 0   LLLLLLLLLLLLLLLL L\n   0000000000000001 0000000000000000 0   LLLLLLLLLLLLLLLH L\n   0000000000000000 0000000000000001 0   LLLLLLLLLLLLLLLH L\n   0000000000000001 0000000000000001 0   LLLLLLLLLLLLLLHL L\n\n   1111111111111111 0000000000000000 0   HHHHHHHHHHHHHHHH L\n   1111111111111111 0000000000000001 0   LLLLLLLLLLLLLLLL H\n   0000000000000001 1111111111111111 0   LLLLLLLLLLLLLLLL H\n   1111111111111111 1111111111111111 0   HHHHHHHHHHHHHHHL H\n\n   0000000000000000 0000000000000000 1   LLLLLLLLLLLLLLLH L\n   1111111111111111 0000000000000000 1   LLLLLLLLLLLLLLLL H\n   0000000000000000 1111111111111111 1   LLLLLLLLLLLLLLLL H\n\n.plot A[3:0] B[3:0] Cin\n.plot S[3:0] Cout\n"]]},"add32":{"properties":{},"schematic":[["port",[80,-40,1],{"signal":"A[15:0]"}],["port",[48,-40,1],{"signal":"B[15:0]"}],["port",[16,-40,1],{"signal":"A[31:16]"}],["port",[-16,-40,1],{"signal":"B[31:16]"}],["port",[0,-8,3],{"signal":"S[31:16]"}],["port",[64,-8,3],{"signal":"S[15:0]"}],["port",[96,-24,2],{"signal":"Cin"}],["port",[-32,-24,0],{"signal":"Cout"}],["beta:add16",[72,-16,0]],["beta:add16",[8,-16,0]]],"icon":[["line",[-32,-16,0,0,16]],["line",[-32,-16,0,48,0]],["line",[16,-16,0,0,16]],["line",[16,0,0,-48,0]],["terminal",[-24,-24,1],{"name":"B[15:0]"}],["terminal",[-8,8,3],{"name":"S[15:0]"}],["terminal",[-40,-8,0],{"name":"Cout"}],["terminal",[24,-8,2],{"name":"Cin"}],["text",[-8,-8,0],{"text":"+32","font":"12pt sans-serif","align":"center"}]],"test":[["test","\n// 32-bit ripple carry adder\n\n.power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A[31:0] B[31:0] Cin\n.group outputs S[31:0] Cout\n.mode gate\n.cycle assert inputs tran 99n sample outputs tran 1n\n\n// ........... A[31:0] ............ ........... B[31:0] ............ C ........... S[31:0] ............ C\n   00000000000000000000000000000000 00000000000000000000000000000000 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00000000000000000000000000000000 00000000000000000000000000000000 1 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH L\n   00000000000000000000000000000001 00000000000000000000000000000000 1 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL L\n   11111111111111111111111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL H\n   00000000000000000000000000000000 11111111111111111111111111111111 1 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL H\n   00000000000000000000000000000001 11111111111111111111111111111111 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL H\n   00000000000000000000000000000001 11111111111111111111111111111111 1 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH H\n   00000000000000000000000000000001 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL L\n   00000000000000000000000000000000 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH L\n   00000000000000000000000000000010 00000000000000000000000000000010 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL L\n   00000000000000000000000000000001 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL L\n   00000000000000000000000000000100 00000000000000000000000000000100 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL L\n   00000000000000000000000000000011 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL L\n   00000000000000000000000000001000 00000000000000000000000000001000 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL L\n   00000000000000000000000000000111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL L\n   00000000000000000000000000010000 00000000000000000000000000010000 0 LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL L\n   00000000000000000000000000001111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL L\n   00000000000000000000000000100000 00000000000000000000000000100000 0 LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL L\n   00000000000000000000000000011111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL L\n   00000000000000000000000001000000 00000000000000000000000001000000 0 LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL L\n   00000000000000000000000000111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL L\n   00000000000000000000000010000000 00000000000000000000000010000000 0 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL L\n   00000000000000000000000001111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL L\n   00000000000000000000000100000000 00000000000000000000000100000000 0 LLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL L\n   00000000000000000000000011111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL L\n   00000000000000000000001000000000 00000000000000000000001000000000 0 LLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL L\n   00000000000000000000000111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL L\n   00000000000000000000010000000000 00000000000000000000010000000000 0 LLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLL L\n   00000000000000000000001111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL L\n   00000000000000000000100000000000 00000000000000000000100000000000 0 LLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLL L\n   00000000000000000000011111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLL L\n   00000000000000000001000000000000 00000000000000000001000000000000 0 LLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLL L\n   00000000000000000000111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLL L\n   00000000000000000010000000000000 00000000000000000010000000000000 0 LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL L\n   00000000000000000001111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLL L\n   00000000000000000100000000000000 00000000000000000100000000000000 0 LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL L\n   00000000000000000011111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL L\n   00000000000000001000000000000000 00000000000000001000000000000000 0 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL L\n   00000000000000000111111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL L\n   00000000000000010000000000000000 00000000000000010000000000000000 0 LLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLL L\n   00000000000000001111111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL L\n   00000000000000100000000000000000 00000000000000100000000000000000 0 LLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLL L\n   00000000000000011111111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLL L\n   00000000000001000000000000000000 00000000000001000000000000000000 0 LLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLL L\n   00000000000000111111111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLL L\n   00000000000010000000000000000000 00000000000010000000000000000000 0 LLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLL L\n   00000000000001111111111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLL L\n   00000000000100000000000000000000 00000000000100000000000000000000 0 LLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL L\n   00000000000011111111111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLL L\n   00000000001000000000000000000000 00000000001000000000000000000000 0 LLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL L\n   00000000000111111111111111111111 00000000000000000000000000000001 0 LLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL L\n   00000000010000000000000000000000 00000000010000000000000000000000 0 LLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL L\n   00000000001111111111111111111111 00000000000000000000000000000001 0 LLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL L\n   00000000100000000000000000000000 00000000100000000000000000000000 0 LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL L\n   00000000011111111111111111111111 00000000000000000000000000000001 0 LLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL L\n   00000001000000000000000000000000 00000001000000000000000000000000 0 LLLLLLHLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00000000111111111111111111111111 00000000000000000000000000000001 0 LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL L\n   00000010000000000000000000000000 00000010000000000000000000000000 0 LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00000001111111111111111111111111 00000000000000000000000000000001 0 LLLLLLHLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00000100000000000000000000000000 00000100000000000000000000000000 0 LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00000011111111111111111111111111 00000000000000000000000000000001 0 LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00001000000000000000000000000000 00001000000000000000000000000000 0 LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00000111111111111111111111111111 00000000000000000000000000000001 0 LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00010000000000000000000000000000 00010000000000000000000000000000 0 LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00001111111111111111111111111111 00000000000000000000000000000001 0 LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00100000000000000000000000000000 00100000000000000000000000000000 0 LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00011111111111111111111111111111 00000000000000000000000000000001 0 LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   01000000000000000000000000000000 01000000000000000000000000000000 0 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00111111111111111111111111111111 00000000000000000000000000000001 0 LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   10000000000000000000000000000000 10000000000000000000000000000000 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL H\n   01111111111111111111111111111111 00000000000000000000000000000001 0 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   00000000000000000000000000000000 00000000000000000000000000000000 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL L\n   11111111111111111111111111111111 00000000000000000000000000000001 0 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL H\n\n\n.plot X(A[31:0])\n.plot X(B[31:0])\n.plot Cin\n.plot X(S[31:0])\n.plot Cout\n"]]},"alu":{"properties":{},"schematic":[["port",[-304,-152,0],{"signal":"A[31:0]"}],["port",[-304,-168,0],{"signal":"B[31:0]"}],["port",[-304,-136,0],{"signal":"Fn[4:0]"}],["gates:mux2",[104,-64,0]],["port",[120,-56,2],{"signal":"Y[31:0]"}],["port",[112,-32,3],{"signal":"Fn[4]"}],["gates:mux2",[72,-56,0]],["port",[80,-24,3],{"signal":"Fn[2]"}],["gates:mux2",[40,-48,0]],["port",[48,-16,3],{"signal":"Fn[3]"}],["beta:shift",[-232,8,0]],["wire",[104,-120,0,0,56],{"signal":"B[31:0]"}],["port",[40,-104,0],{"signal":"Fn[3:0]"}],["beta:bool",[72,-120,0]],["wire",[88,-168,0,0,16]],["port",[-88,-16,0],{"signal":"Fn[3],Fn[1]"}],["wire",[72,-88,0,0,32]],["wire",[-8,-32,0,48,0],{"signal":"C[31:0]"}],["port",[-160,-80,0],{"signal":"Fn[1:0]"}],["wire",[-216,-24,0,0,-144]],["wire",[-304,-168,0,88,0]],["wire",[-248,-24,0,0,-128]],["wire",[-304,-152,0,56,0]],["wire",[-200,8,0,216,0],{"signal":"S[31:0]"}],["wire",[16,8,0,0,-56]],["wire",[16,-48,0,24,0]],["port",[-264,8,0],{"signal":"Fn[1:0]"}],["wire",[-136,-152,0,0,32]],["text",[-360,-223,0],{"text":"Beta ALU block diagram, per lab writeup.","font":"12pt sans-serif"}],["wire",[-248,-152,0,112,0]],["beta:arith",[-128,-88,0]],["wire",[56,-152,0,-192,0]],["wire",[-104,-120,0,0,-48]],["wire",[-216,-168,0,112,0]],["wire",[72,-88,0,-152,0],{"signal":"A[31:0]"}],["beta:cmp",[-56,-32,0]],["wire",[-88,-48,0,-32,0]],["wire",[56,-40,0,16,0]],["wire",[88,-48,0,16,0]],["wire",[-120,-56,0,0,8]],["wire",[88,-168,0,-192,0]]],"icon":[["line",[-48,-24,0,32,0]],["line",[-16,-24,0,8,15]],["line",[-8,-9,0,8,-15]],["line",[0,-24,0,32,0]],["line",[32,-24,0,-8,32]],["line",[24,8,0,-64,0]],["line",[-40,8,0,-8,-32]],["text",[-8,-1,0],{"text":"ALU","font":"12pt sans-serif","align":"center"}],["text",[-32,-24,0],{"text":"A","align":"top-center"}],["text",[16,-24,0],{"text":"B","align":"top-center"}],["text",[-40,0,3],{"text":"Fn","align":"top-center"}],["terminal",[-32,-32,1],{"name":"A[31:0]"}],["terminal",[16,-32,1],{"name":"B[31:0]"}],["terminal",[-8,16,3],{"name":"Y[31:0]"}],["terminal",[-48,0,0],{"name":"Fn[4:0]"}]],"test":[["test","// Beta ALU\n\n.power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs Fn[4:0] A[31:0] B[31:0]\n.group outputs Y[31:0] \n.mode gate\n\n.cycle assert inputs tran 99n sample outputs tran 1n\n\n// FFFFF AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\n\n// simple additions:\n   00000 00000000000000000000000000000000 00000000000000000000000000000000 00000000000000000000000000000000\n   00000 00000000000000000000000000000001 00000000000000000000000000000000 00000000000000000000000000000001\n   00000 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000001\n   00000 11111111111111111111111111111111 00000000000000000000000000000000 11111111111111111111111111111111\n   00000 11111111111111111111111111111111 00000000000000000000000000000001 00000000000000000000000000000000\n   00000 11111111111111111111111111111111 11111111111111111111111111111111 11111111111111111111111111111110\n   00000 01111111111111111111111111111111 01111111111111111111111111111111 11111111111111111111111111111110\n\n//   00 00000000000000000000000000000000 00000000000000000000000000000000 00000000000000000000000000000000\n\n\n\n"]]},"shift":{"properties":{},"schematic":[["port",[-112,-48,0],{"signal":"A[31:0]"}],["port",[-112,-32,0],{"signal":"B[31:0]"}],["port",[-112,8,0],{"signal":"Y[31:0]"}],["port",[-112,-16,0],{"signal":"Fn[3:0]"}]],"icon":[["text",[0,0,0],{"text":"SHIFT","font":"12pt sans-serif","align":"center"}],["text",[-16,-24,0],{"text":"A","align":"top-center"}],["text",[16,-24,0],{"text":"B","align":"top-center"}],["terminal",[-16,-32,1],{"name":"A[31:0]"}],["terminal",[16,-32,1],{"name":"B[31:0]"}],["terminal",[-32,0,0],{"name":"Fn[1:0]"}],["terminal",[32,0,2],{"name":"Y[31:0]"}],["line",[-24,-24,0,48,0]],["line",[24,-24,0,0,48]],["line",[-24,-24,0,0,48]],["line",[-24,24,0,48,0]]],"test":[["test",""]]},"bool":{"properties":{},"schematic":[["gates:mux4",[-120,-64,0]],["port",[-120,-16,0],{"signal":"Fn[0]"}],["port",[-120,-32,0],{"signal":"Fn[1]"}],["port",[-120,-48,0],{"signal":"Fn[2]"}],["port",[-120,-64,0],{"signal":"Fn[3]"}],["port",[-112,0,3],{"signal":"A[31:0],B[31:0]"}],["port",[-88,-40,2],{"signal":"Y[31:0]"}],["wire",[-88,-40,0,-16,0]]],"icon":[["text",[0,0,0],{"text":"BOOL","font":"12pt sans-serif","align":"center"}],["text",[-16,-24,0],{"text":"A","align":"top-center"}],["text",[16,-24,0],{"text":"B","align":"top-center"}],["terminal",[-16,-32,1],{"name":"A[31:0]"}],["terminal",[16,-32,1],{"name":"B[31:0]"}],["terminal",[-32,16,0],{"name":"Fn[3:0]"}],["terminal",[32,0,2],{"name":"Y[31:0]"}],["line",[-24,-24,0,48,0]],["line",[24,-24,0,0,48]],["line",[-24,-24,0,0,48]],["line",[-24,24,0,48,0]],["text",[-23,16,0],{"text":"Fn"}]],"test":[["test","// 32-bit 2-operand logic for Beta ALU\n\n.power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs Fn[3:0] A[31:0] B[31:0]\n.group outputs Y[31:0]\n.mode gate\n.cycle assert inputs tran 19n sample outputs tran 1n\n\n// FFFF AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\n\n// AND=1000:\n   1000 00000000000000000000000000000000 00000000000000000000000000000000 00000000000000000000000000000000\n   1000 11111111111111111111111111111111 10101010101010101010101010101010 10101010101010101010101010101010\n   1000 01010101010101010101010101010101 10101010101010101010101010101010 00000000000000000000000000000000\n   1000 11111111111111110000000000000000 10101010101010101010101010101010 10101010101010100000000000000000\n\n\n// 0000 00000000000000000000000000000000 00000000000000000000000000000000 00000000000000000000000000000000\n\n.plot Fn[3:0], Y[31:0]\n"]]},"arith":{"properties":{},"schematic":[["port",[-184,-80,0],{"signal":"A[31:0]"}],["port",[-184,-56,0],{"signal":"B[31:0]"}],["port",[40,-64,2],{"signal":"Y[31:0]"}],["port",[-184,-40,0],{"signal":"Fn[0]"}],["port",[40,-80,2],{"signal":"N,V,Z"}],["port",[-8,32,3],{"signal":"Fn[1]"}],["gates:mux2",[-16,0,0]],["port",[-16,0,0],{"signal":"MulOut"}],["wire",[-184,-80,0,120,0]],["gates:xor2",[-168,-56,0]],["wire",[-64,-48,0,0,-32]],["wire",[-184,-56,0,16,0]],["wire",[-48,-88,0,0,56]],["wire",[-48,-88,0,-128,0]],["wire",[-176,-88,0,0,48]],["wire",[-184,-40,0,8,0]],["wire",[-168,-40,0,-8,0]],["wire",[-80,-16,0,0,32]],["wire",[-80,16,0,64,0]],["port",[-80,16,0],{"signal":"sum[31:0]"}],["port",[-176,40,0],{"signal":"sum[31]"}],["jumper",[-176,40,0]],["port",[-168,40,2],{"signal":"N"}],["port",[-176,56,0],{"signal":"sum[31:0]"}],["beta:nor32",[-152,80,0]],["wire",[-160,56,0,-16,0]],["port",[-160,88,2],{"signal":"Z"}],["beta:add32",[-72,-24,0]],["port",[-128,-64,2],{"signal":"XB[31:0]"}],["wire",[-128,-64,0,0,16]],["wire",[-120,-48,0,24,0]],["port",[-144,112,0],{"signal":"XB[31]"}],["port",[-144,128,0],{"signal":"A[31]"}],["gates:nand3",[-144,112,0]],["gates:inverter",[-176,144,0]],["port",[-176,144,0],{"signal":"sum[31]"}],["gates:nand3",[-144,168,0]],["gates:inverter",[-176,168,0]],["gates:inverter",[-176,184,0]],["port",[-144,200,0],{"signal":"sum[31]"}],["port",[-176,184,0],{"signal":"XB[31]"}],["port",[-176,168,0],{"signal":"A[31]"}],["gates:nor2",[-96,144,0]],["wire",[-96,160,0,0,24]],["wire",[-96,128,0,0,16]],["port",[-48,152,2],{"signal":"V"}],["jumper",[32,-80,0]],["port",[32,-80,0],{"signal":"NVZ[2:0]"}],["port",[0,8,2],{"signal":"Y[31:0]"}]],"icon":[["text",[8,0,0],{"text":"ARITH","font":"12pt sans-serif","align":"center"}],["text",[-8,-24,0],{"text":"A","align":"top-center"}],["text",[24,-24,0],{"text":"B","align":"top-center"}],["terminal",[-8,-32,1],{"name":"A[31:0]"}],["terminal",[24,-32,1],{"name":"B[31:0]"}],["terminal",[-32,8,0],{"name":"Fn[1:0]"}],["terminal",[48,0,2],{"name":"Y[31:0]"}],["line",[40,-24,0,0,48]],["line",[-24,-24,0,0,48]],["terminal",[8,32,3],{"name":"NVZ[2:0]"}],["text",[8,23,0],{"text":"NVZ","align":"bottom-center"}],["line",[-24,-24,0,64,0]],["line",[-24,24,0,64,0]]],"test":[["test","// Beta ALU\n\n.power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs Fn[1:0] A[31:0] B[31:0]\n.group outputs NVZ[2:0] Y[31:0] \n.mode gate\n\n.cycle assert inputs tran 99n sample outputs tran 1n\n\n// FFFFF AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB NVZ YYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\n\n// simple additions:\n   00 00000000000000000000000000000000 00000000000000000000000000000000 001 00000000000000000000000000000000\n   00 00000000000000000000000000000001 00000000000000000000000000000000 000 00000000000000000000000000000001\n   00 00000000000000000000000000000000 00000000000000000000000000000001 000 00000000000000000000000000000001\n   00 11111111111111111111111111111111 00000000000000000000000000000000 100 11111111111111111111111111111111\n   00 11111111111111111111111111111111 00000000000000000000000000000001 001 00000000000000000000000000000000\n   00 11111111111111111111111111111111 11111111111111111111111111111111 100 11111111111111111111111111111110\n   00 01111111111111111111111111111111 01111111111111111111111111111111 110 11111111111111111111111111111110\n\n//   00 00000000000000000000000000000000 00000000000000000000000000000000 000 00000000000000000000000000000000\n\n\n.plot NVZ[2:0]\n\n\n"]]},"cmp":{"properties":{},"schematic":[["port",[-112,-48,0],{"signal":"A[31:0]"}],["port",[-112,-32,0],{"signal":"B[31:0]"}],["port",[-112,32,0],{"signal":"Y[31:0]"}],["port",[-112,-16,0],{"signal":"Fn3,Fn1"}],["port",[-112,0,0],{"signal":"N,V,Z"}]],"icon":[["text",[8,0,0],{"text":"CMP","font":"12pt sans-serif","align":"center"}],["terminal",[48,0,2],{"name":"Y[31:0]"}],["line",[40,-24,0,0,48]],["line",[-24,-24,0,0,48]],["terminal",[-32,16,0],{"name":"Fn3,Fn1"}],["terminal",[-32,-16,0],{"name":"N,V,Z"}],["text",[-22,-16,0],{"text":"N,V,Z"}],["text",[-23,16,0],{"text":"Fn3,FN1"}],["line",[-24,-24,0,64,0]],["line",[-24,24,0,64,0]]],"test":[["test",""]]},"nor32":{"properties":{},"schematic":[["beta:or16",[8,-8,0]],["beta:or16",[72,-8,0]],["port",[0,-32,1],{"signal":"A[31:16]"}],["port",[64,-32,1],{"signal":"A[15:0]"}],["gates:nor2",[40,0,1]],["wire",[40,0,0,24,0]],["wire",[0,0,0,24,0]],["port",[32,48,3],{"signal":"Z"}]],"icon":[["line",[-32,-16,0,0,16]],["line",[-32,-16,0,48,0]],["line",[16,-16,0,0,16]],["line",[16,0,0,-48,0]],["terminal",[-8,-24,1],{"name":"A[31:0]"}],["terminal",[-8,8,3],{"name":"Z"}],["text",[-8,-8,0],{"text":"=0?","font":"12pt sans-serif","align":"center"}]],"test":[["test",".power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A[3:0] B[3:0] Cin\n.group outputs S[3:0] Cout\n\n.mode gate\n\n.cycle assert inputs tran 9n sample outputs tran 1n\n\n// AAAA BBBB Cin SSSS Cout\n\n   0000 0000 0   0000 0\n   0001 0000 0   0001 0\n   0000 0001 0   0001 0\n   0001 0001 0   0010 0\n\n   1111 0000 0   1111 0\n   1111 0001 0   0000 1\n   0001 1111 0   0000 1\n   1111 1111 0   1110 1\n\n   0000 0000 1   0001 0\n   1111 0000 1   0000 1\n   0000 1111 1   0000 1\n\n.plot A[3:0] B[3:0] Cin\n.plot S[3:0] Cout\n"]]},"or16":{"properties":{},"schematic":[["gates:nor4",[-88,-112,0]],["gates:nor4",[-88,-48,0]],["gates:nor4",[-88,16,0]],["gates:nor4",[-88,80,0]],["wire",[-40,-88,0,72,0]],["wire",[32,-88,0,0,72]],["wire",[-40,-24,0,56,0]],["wire",[16,-24,0,0,24]],["wire",[16,0,0,16,0]],["wire",[-40,40,0,56,0]],["wire",[16,40,0,0,-24]],["wire",[16,16,0,16,0]],["wire",[32,32,0,0,72]],["wire",[32,104,0,-72,0]],["port",[-88,128,0],{"signal":"A[0]"}],["port",[-88,112,0],{"signal":"A[1]"}],["port",[-88,96,0],{"signal":"A[2]"}],["port",[-88,80,0],{"signal":"A[3]"}],["port",[-88,64,0],{"signal":"A[4]"}],["port",[-88,48,0],{"signal":"A[5]"}],["port",[-88,32,0],{"signal":"A[6]"}],["port",[-88,16,0],{"signal":"A[7]"}],["port",[-88,0,0],{"signal":"A[8]"}],["port",[-88,-16,0],{"signal":"A[9]"}],["port",[-88,-32,0],{"signal":"A[10]"}],["port",[-88,-48,0],{"signal":"A[11]"}],["port",[-88,-64,0],{"signal":"A[12]"}],["port",[-88,-80,0],{"signal":"A[13]"}],["port",[-88,-96,0],{"signal":"A[14]"}],["port",[-88,-112,0],{"signal":"A[15]"}],["port",[80,8,2],{"signal":"Z"}],["gates:nand4",[32,-16,0]]],"icon":[["line",[-32,-16,0,0,16]],["line",[-32,-16,0,48,0]],["line",[16,-16,0,0,16]],["line",[16,0,0,-48,0]],["terminal",[-8,-24,1],{"name":"A[15:0]"}],["terminal",[-8,8,3],{"name":"Z"}],["text",[-8,-8,0],{"text":"OR16","font":"9pt sans-serif","align":"center"}]],"test":[["test",".power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A[15:0]\n.group outputs Z\n\n.mode gate\n\n.cycle assert inputs tran 9n sample outputs tran 1n\n\n0000000000000000 1\n1000000000000000 0\n0100000000000000 0\n0010000000000000 0\n0001000000000000 0\n\n0000100000000000 0\n0000010000000000 0\n0000001000000000 0\n0000000100000000 0\n\n0000000010000000 0\n0000000001000000 0\n0000000000100000 0\n0000000000010000 0\n\n0000000000001000 0\n0000000000000100 0\n0000000000000010 0\n0000000000000001 0\n\n.plot A[0],A[15]\n.plot Z\n\n"]]},"[c":{"properties":{"iterations":{"edit":"yes","type":"string","value":"1","label":"Iterations"}},"test":[["test",""]]}}