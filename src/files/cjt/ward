{"muxtest":{"properties":{"dc_results":{"1":0,"2":0,"3":0,"4":0,"gnd":0,"MUX2_1.SN":0,"Vdd":0,"MUX2_1.2":0,"MUX2_1.1":0,"MUX2_1.NAND2_3.1":0,"MUX2_1.NAND2_2.1":0,"MUX2_1.NAND2_1.1":0}},"schematic":[["gates:mux2",[0,-48,0]],["analog:v_probe",[32,-40,0]],["port",[0,-48,0],{"signal":"A"}],["port",[0,-32,0],{"signal":"B"}],["port",[32,-40,2],{"signal":"Z"}]],"test":[["test",".power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A B\n.group outputs Z\n\n.cycle assert inputs tran 9n sample outputs tran 1n\n00 L\n01 L\n10 L\n11 H\n\n.plot A B\n.plot Z\n"]]},"muxtext":{"properties":{},"test":[["test",""]]},"mux2":{"properties":{"name":{"edit":"yes","choices":[""],"type":"string","value":"","label":"Name"},"tcd":{"edit":"no","choices":[""],"type":"number","value":"20p","label":"Contamination delay (s)"},"tpd":{"edit":"no","choices":[""],"type":"number","value":"120p","label":"Propagation delay (s)"},"tr":{"edit":"no","choices":[""],"type":"number","value":"4500","label":"Output rise time (s/F)"},"tf":{"edit":"no","choices":[""],"type":"number","value":"2500","label":"Output fall time (s/F)"},"cin":{"edit":"no","choices":[""],"type":"number","value":"0.005p","label":"Input capacitance (F)"},"size":{"edit":"no","choices":[""],"type":"number","value":"27","label":"Size (μ²)"},"tran_tstop":".000001"},"test":[["test",".power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs D0 D1 S\n.group outputs Y\n\n.cycle assert inputs tran 13n sample outputs tran 1n\n110 H\n111 L\n110 H\n111 L\n000 L\n001 L\n010 L\n011 H\n100 H\n101 L\n110 H\n111 H\n\n.plot D0 D1 S\n.plot Y\n"]],"schematic":[["gates:nand2",[-56,-32,0]],["gates:nand2",[-56,0,0]],["gates:nand2",[-8,-16,0]],["wire",[-8,-24,0,0,8]],["wire",[-8,0,0,0,8]],["gates:inverter",[-56,40,0]],["port",[-56,-32,0],{"signal":"D0"}],["port",[-56,0,0],{"signal":"D1"}],["port",[-88,40,0],{"signal":"S"}],["port",[40,-8,4],{"signal":"Y"}],["wire",[-56,16,0,-8,0],{"signal":"S"}],["wire",[-56,-16,0,-8,0],{"signal":"SN"}],["wire",[-16,40,0,-8,0],{"signal":"SN"}],["gates:buffer",[-88,40,0]],["text",[-144,-72,0],{"text":"A non-lenient MUX. "}],["text",[-144,-64,0],{"text":" We've added a buffer to slow down the timing of SN, and accentuate the hazard."}]],"icon":[["terminal",[0,0,0],{"name":"D1"}],["terminal",[0,16,0],{"name":"D0"}],["terminal",[16,32,5],{"name":"S"}],["line",[8,-8,0,0,32]],["line",[24,0,0,0,16]],["line",[24,16,0,-16,8]],["line",[8,-8,0,16,8]],["terminal",[32,8,4],{"name":"Y"}],["line",[16,24,0,0,-4]],["text",[10,0,0],{"text":"1"}],["text",[10,16,0],{"text":"0"}]]},"lmux2":{"properties":{"name":{"edit":"yes","choices":[""],"type":"string","value":"","label":"Name"},"tcd":{"edit":"no","choices":[""],"type":"number","value":"20p","label":"Contamination delay (s)"},"tpd":{"edit":"no","choices":[""],"type":"number","value":"120p","label":"Propagation delay (s)"},"tr":{"edit":"no","choices":[""],"type":"number","value":"4500","label":"Output rise time (s/F)"},"tf":{"edit":"no","choices":[""],"type":"number","value":"2500","label":"Output fall time (s/F)"},"cin":{"edit":"no","choices":[""],"type":"number","value":"0.005p","label":"Input capacitance (F)"},"size":{"edit":"no","choices":[""],"type":"number","value":"27","label":"Size (μ²)"},"tran_tstop":".000001"},"test":[["test",".power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs D0 D1 S\n.group outputs Y\n\n.cycle assert inputs tran 13n sample outputs tran 1n\n110 H\n111 L\n110 H\n111 L\n000 L\n001 L\n010 L\n011 H\n100 H\n101 L\n110 H\n111 H\n\n.plot D0 D1 S\n.plot Y\n"]],"schematic":[["gates:nand2",[-40,-64,0]],["gates:nand2",[-40,0,0]],["gates:inverter",[-56,40,0]],["port",[-40,-64,0],{"signal":"D0"}],["port",[-40,0,0],{"signal":"D1"}],["port",[-88,40,0],{"signal":"S"}],["port",[56,-24,4],{"signal":"Y"}],["wire",[-40,16,0,-8,0],{"signal":"S"}],["wire",[-40,-48,0,-8,0],{"signal":"SN"}],["wire",[-16,40,0,-8,0],{"signal":"SN"}],["gates:buffer",[-88,40,0]],["text",[-144,-104,0],{"text":"A lenient MUX. "}],["text",[-144,-93,0],{"text":" We've kept the buffer to slow down the timing of SN, "}],["gates:nand3",[8,-40,0]],["gates:nand2",[-40,-32,0]],["wire",[8,-8,0,0,16]],["port",[-40,-32,0],{"signal":"D0"}],["port",[-40,-16,0],{"signal":"D1"}],["wire",[8,-56,0,0,16]],["text",[-144,-81,0],{"text":"but now theres no hazard."}]],"icon":[["terminal",[0,0,0],{"name":"D1"}],["terminal",[0,16,0],{"name":"D0"}],["terminal",[16,32,5],{"name":"S"}],["line",[8,-8,0,0,32]],["line",[24,0,0,0,16]],["line",[24,16,0,-16,8]],["line",[8,-8,0,16,8]],["terminal",[32,8,4],{"name":"Y"}],["line",[16,24,0,0,-4]],["text",[10,0,0],{"text":"1"}],["text",[10,16,0],{"text":"0"}]]},"ha":{"properties":{},"schematic":[["gates:xor2",[-32,-48,0]],["gates:and2",[-32,-16,0]],["port",[-32,-48,0],{"signal":"A"}],["port",[-32,-32,0],{"signal":"B"}],["port",[-32,-16,0],{"signal":"A"}],["port",[-32,0,0],{"signal":"B"}],["port",[16,-40,2],{"signal":"S"}],["port",[16,-8,2],{"signal":"C"}],["text",[-112,-88,0],{"text":"Simple Half Adder"}]],"icon":[["terminal",[8,-16,2],{"name":"A"}],["terminal",[-8,-32,1],{"name":"B"}],["circle",[-8,-16,0,8]],["terminal",[-8,0,3],{"name":"S"}],["terminal",[-24,-16,0],{"name":"C"}],["text",[-8,-16,0],{"text":"HA","font":"8pt sans-serif","align":"center"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n// test actions are applied to named groups of signals.\n// A signal can appear in more than one group.  Order\n// of groups and signals within each group determine \n// order of values on each line of test values\n.group inputs A B\n.group outputs S C\n\n// set type of simulation to be performed\n//  device -- transient simulation; components must be from from analog library\n//  gate -- gate-level simulation; components must be from gates library\n.mode gate\n\n.cycle assert inputs tran 4n sample outputs\n00 LL\n01 HL\n10 HL\n11 HH\n\n.plot A,B,S,C\n"]]},"inc29":{"properties":{},"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n// test actions are applied to named groups of signals.\n// A signal can appear in more than one group.  Order\n// of groups and signals within each group determine \n// order of values on each line of test values\n.group inputs P[30:2]\n.group outputs N[30:2]\n\n// set type of simulation to be performed\n//  device -- transient simulation; components must be from from analog library\n//  gate -- gate-level simulation; components must be from gates library\n.mode gate\n\n/*\nTests are sequences of lines supplying test values; .cycle specifies\nthe sequence of actions that will be performed for each test.  Available\nactions are\n   assert group -- set values for signals in group with H,L test values\n   deassert group -- stop setting values for signals in group with H,L test values\n   sample group -- check values of signals in group with 0,1 test values\n   tran time -- run simulation for specified time interval\n   signal=val -- set signal to specified value\n*/\n.cycle assert inputs tran 9n sample outputs tran 1n\n\n// the tests themselves -- one test per line\n//   to assert signal this cycle use 0,1; use Z or - if not to be asserted\n//   to sample signal this cycle use L,H; use - if not to be sampled\n// whitespace can be used to improve readability, non-blank characters\n// are associated, in order, with signals listed in .group above.\n\n00000000000000000000000000000 00000000000000000000000000001\n01111111111111111111111111111 10000000000000000000000000000\n\n// (optional) produce plots showing the test inputs and/or outputs\n.plot P[30:2]\n.plot N[30:2]\n\n"]],"icon":[["line",[-40,-16,0,0,16]],["line",[-40,0,0,80,0]],["line",[-40,-16,0,80,0]],["line",[40,-16,0,0,16]],["text",[0,-8,0],{"text":"+1","align":"center"}],["terminal",[0,-24,1],{"name":"P[30:2]"}],["terminal",[0,8,3],{"name":"N[30:2]"}]],"schematic":[["text",[-128,-80,0],{"text":"29-bit incrementor for Beta PC"}],["ward:inc4",[40,-8,0]],["ward:inc4",[72,-8,0]],["ward:inc4",[8,-8,0]],["ward:inc4",[-24,-8,0]],["ward:inc4",[-56,-8,0]],["ward:inc4",[-88,-8,0]],["ward:inc4",[104,-8,0]],["ward:ha",[-112,8,0]],["vdd",[120,-8,0]],["port",[-8,-96,1],{"signal":"P[30:2]"}],["port",[-8,56,3],{"signal":"N[30:2]"}],["wire",[-120,-24,0,0,-8],{"signal":"P[30]"}],["wire",[-88,-24,0,0,-8],{"signal":"P[29:26]"}],["wire",[-56,-24,0,0,-8],{"signal":"P[25:22]"}],["wire",[-24,-24,0,0,-8],{"signal":"P[21:18]"}],["wire",[8,-24,0,0,-8],{"signal":"P[17:14]"}],["wire",[40,-24,0,0,-8],{"signal":"P[13:10]"}],["wire",[72,-24,0,0,-8],{"signal":"P[9:6]"}],["wire",[104,-24,0,0,-8],{"signal":"P[5:2]"}],["wire",[-120,16,0,0,-8],{"signal":"N[30]"}],["wire",[-88,16,0,0,-8],{"signal":"N[29:26]"}],["wire",[-56,16,0,0,-8],{"signal":"N[25:22]"}],["wire",[-24,16,0,0,-8],{"signal":"N[21:18]"}],["wire",[8,16,0,0,-8],{"signal":"N[17:14]"}],["wire",[40,16,0,0,-8],{"signal":"N[13:10]"}],["wire",[72,16,0,0,-8],{"signal":"N[9:6]"}],["wire",[104,16,0,0,-8],{"signal":"N[5:2]"}]]},"inc4":{"properties":{},"schematic":[["ward:ha",[80,-8,0]],["ward:ha",[48,-8,0]],["ward:ha",[16,-8,0]],["ward:ha",[-16,-8,0]],["port",[-24,-40,1],{"signal":"A[3]"}],["port",[8,-40,1],{"signal":"A[2]"}],["port",[40,-40,1],{"signal":"A[1]"}],["port",[72,-40,1],{"signal":"A[0]"}],["port",[-24,-8,3],{"signal":"S[3]"}],["port",[8,-8,3],{"signal":"S[2]"}],["port",[40,-8,3],{"signal":"S[1]"}],["port",[72,-8,3],{"signal":"S[0]"}],["port",[-40,-24,0],{"signal":"Cout"}],["port",[88,-24,2],{"signal":"Cin"}]],"icon":[["line",[-8,-8,0,0,16]],["line",[-8,8,0,16,0]],["line",[8,8,0,0,-16]],["line",[8,-8,0,-16,0]],["text",[0,0,0],{"text":"INC4","font":"5pt sans-serif","align":"center"}],["terminal",[0,-16,1],{"name":"A[3:0]"}],["terminal",[0,16,3],{"name":"S[3:0]"}],["terminal",[16,0,2],{"name":"Cin"}],["terminal",[-16,0,0],{"name":"Cout"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n// test actions are applied to named groups of signals.\n// A signal can appear in more than one group.  Order\n// of groups and signals within each group determine \n// order of values on each line of test values\n.group inputs A[3:0] Cin\n.group outputs S[3:0] Cout\n\n// set type of simulation to be performed\n//  device -- transient simulation; components must be from from analog library\n//  gate -- gate-level simulation; components must be from gates library\n.mode gate\n\n/*\nTests are sequences of lines supplying test values; .cycle specifies\nthe sequence of actions that will be performed for each test.  Available\nactions are\n   assert group -- set values for signals in group with H,L test values\n   deassert group -- stop setting values for signals in group with H,L test values\n   sample group -- check values of signals in group with 0,1 test values\n   tran time -- run simulation for specified time interval\n   signal=val -- set signal to specified value\n*/\n.cycle assert inputs tran 1n sample outputs\n\n// the tests themselves -- one test per line\n//   to assert signal this cycle use 0,1; use Z or - if not to be asserted\n//   to sample signal this cycle use L,H; use - if not to be sampled\n// whitespace can be used to improve readability, non-blank characters\n// are associated, in order, with signals listed in .group above.\n0000 0 0000 0\n0000 1 0001 0\n0001 1 0010 0\n0010 1 0011 0\n0011 1 0100 0\n0100 1 0101 0\n0101 1 0110 0\n0110 1 0111 0\n0111 1 1000 0\n1000 1 1001 0\n1001 1 1010 0\n1010 1 1011 0\n1011 1 1100 0\n1100 1 1101 0\n1101 1 1110 0\n1110 1 1111 0\n1111 1 0000 1\n\n// (optional) produce plots showing the test inputs and/or outputs\n.plot A[3:0] Cin S[3:0] Cout\n\n"]]},"beta-pc":{"properties":{},"schematic":[["gates:dreg",[-48,-80,0]],["port",[-48,-64,0],{"signal":"CLK"}],["port",[-8,-80,2],{"signal":"PC[31:2]"}],["port",[-8,-40,2],{"signal":"PC[1:0]"}],["port",[-48,-80,0],{"signal":"NPC[31:2]"}],["gates:mux2",[16,40,0]],["gates:mux4",[-80,16,0],{"name":"pcsel-mux"}],["port",[-72,80,0],{"signal":"PCSEL[1:0]"}],["port",[-72,96,0],{"signal":"PCSEL[2]"}],["port",[96,56,2],{"signal":"NPC[31:2]"}],["port",[-80,64,0],{"signal":"PC[31],PCINC[30:2]"}],["port",[-80,48,0],{"signal":"PC[31],BT[30:2]"}],["port",[-80,32,0],{"signal":"JT[31:2]"}],["port",[-80,16,0],{"signal":"ILLOP[31:2]"}],["port",[16,56,0],{"signal":"XINT[31:2]"}],["text",[-159,-104,0],{"text":"Here's the actual PC: a 30-bit register"}],["text",[-161,-8,0],{"text":"Here's the next-PC logic:"}],["gates:and2",[32,48,0]],["port",[-72,112,0],{"signal":"RESET"}],["wire",[24,72,0,0,24]],["gates:inverter",[-64,112,0]],["ward:inc29",[-80,184,0]],["port",[-80,160,0],{"signal":"PC[30:2]"}],["port",[-80,192,2],{"signal":"PCINC[30:2]"}],["ward:ZERO",[0,-32,0]],["text",[-280,-8,0],{"text":"Some constants:"}],["port",[-208,16,0],{"signal":"ILLOP[2]"}],["port",[-208,32,0],{"signal":"ILLOP[31]"}],["port",[-208,48,0],{"signal":"ILLOP[30:3]"}],["port",[-208,88,0],{"signal":"XINT[3]"}],["port",[-208,72,0],{"signal":"XINT[2]"}],["port",[-208,104,0],{"signal":"XINT[31]"}],["port",[-208,120,0],{"signal":"XINT[30:4]"}],["ward:ONE",[-216,8,2]],["ward:ZERO",[-216,40,2]],["ward:ZERO",[-216,112,2]],["ward:ZERO",[-216,64,2]],["ward:ONE",[-216,24,2]],["ward:ONE",[-216,96,2]],["ward:ONE",[-216,80,2]],["wire",[-32,112,0,64,0]],["wire",[32,64,0,0,48]],["wire",[96,56,0,-16,0]],["wire",[-64,112,0,-8,0]],["wire",[24,96,0,-96,0]],["wire",[16,40,0,-80,0],{"signal":"foobar[31:2]"}],["wire",[32,48,0,0,-32],{"signal":"pre_reset[31:2]"}],["port",[-208,136,0],{"signal":"JT[31:2]"}],["ward:ZERO",[-216,128,2]]],"icon":[["line",[-32,-24,0,0,32]],["line",[-32,8,0,48,0]],["line",[16,8,0,0,-32]],["line",[16,-24,0,-48,0]],["text",[-8,-11,0],{"text":"PC","align":"center"}],["text",[-8,-4,0],{"text":"subsystem","align":"center"}],["line",[-32,-2,0,5,3]],["line",[-27,1,0,-5,2]],["terminal",[-40,-8,0],{"name":"RESET"}],["terminal",[-40,0,0],{"name":"CLK"}],["terminal",[8,-32,1],{"name":"BT[30:2]"}],["terminal",[-24,-32,1],{"name":"JT[31:2]"}],["terminal",[-40,-16,0],{"name":"PCSEL[2:0]"}],["terminal",[24,-16,2],{"name":"PC[31:0]"}],["terminal",[24,-8,2],{"name":"PCINC[30:2]"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n// test actions are applied to named groups of signals.\n// A signal can appear in more than one group.  Order\n// of groups and signals within each group determine \n// order of values on each line of test values\n.group inputs CLK RESET PCSEL[2:0]\n.group outputs PC[31:0]\n\n// set type of simulation to be performed\n//  device -- transient simulation; components must be from from analog library\n//  gate -- gate-level simulation; components must be from gates library\n.mode gate\n\n/*\nTests are sequences of lines supplying test values; .cycle specifies\nthe sequence of actions that will be performed for each test.  Available\nactions are\n   assert group -- set values for signals in group with H,L test values\n   deassert group -- stop setting values for signals in group with H,L test values\n   sample group -- check values of signals in group with 0,1 test values\n   tran time -- run simulation for specified time interval\n   signal=val -- set signal to specified value\n*/\n.cycle assert inputs tran 99n sample outputs tran 1n\n\n// the tests themselves -- one test per line\n//   to assert signal this cycle use 0,1; use Z or - if not to be asserted\n//   to sample signal this cycle use L,H; use - if not to be sampled\n// whitespace can be used to improve readability, non-blank characters\n// are associated, in order, with signals listed in .group above.\n\n// test reset:\n0 0 000 --------------------------------\n0 1 000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\n\n\n\n\n// (optional) produce plots showing the test inputs and/or outputs\n.plot CLK, RESET, PCSEL[2:0], PC[31:0]\n\n"]]},"ZERO":{"properties":{},"schematic":[["port",[-40,-32,0],{"signal":"Z"}],["ground",[-32,-32,0]],["jumper",[-40,-32,0]]],"icon":[["terminal",[-8,-8,0],{"name":"Z"}],["text",[-18,-8,0],{"text":"0"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group outputs Z\n.cycle tran 1n sample outputs tran 1n\n1\n\n.plot Z\n\n"]]},"ONE":{"properties":{},"schematic":[["port",[-48,-32,0],{"signal":"Z"}],["vdd",[-40,-32,0]],["jumper",[-48,-32,0]]],"icon":[["terminal",[-8,-8,0],{"name":"Z"}],["text",[-19,-8,0],{"text":"1"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group outputs Z\n.cycle tran 1n sample outputs tran 1n\n1\n\n.plot Z\n"]]},"incr4":{"properties":{},"test":[["test",""]]},"mux":{"properties":{},"test":[["test",""]]},"":{"properties":{},"test":[["test",""]]},"bug":{"properties":{"foobar":{"label":"foobar","type":"string","value":"","edit":"yes","choices":[""]}},"schematic":[["port",[-192,-48,2],{"signal":"out"}],["port",[-192,-24,0],{"signal":"in"}],["gates:inverter",[-192,-24,0]],["gates:inverter",[-224,-48,0]],["ward:ZERO",[-216,-40,0]],["port",[-192,-64,2],{"signal":"outx"}],["ward:ONE",[-184,-56,0]],["text",[-280,-104,0],{"text":"BUG: Why doesn't my 1 constant work???"}],["text",[-271,-89,0],{"text":"ZERO seems fine..."}]],"icon":[["line",[-32,-24,0,0,32]],["line",[-32,8,0,48,0]],["line",[16,8,0,0,-32]],["line",[16,-24,0,-48,0]],["text",[-8,-11,0],{"text":"PC","align":"center"}],["text",[-8,-4,0],{"text":"subsystem","align":"center"}],["line",[-32,-2,0,5,3]],["line",[-27,1,0,-5,2]],["terminal",[-40,0,0],{"name":"in"}],["terminal",[24,-16,2],{"name":"out"}],["terminal",[24,0,2],{"name":"outx"}]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n// test actions are applied to named groups of signals.\n// A signal can appear in more than one group.  Order\n// of groups and signals within each group determine \n// order of values on each line of test values\n.group inputs in\n.group outputs out\n\n// set type of simulation to be performed\n//  device -- transient simulation; components must be from from analog library\n//  gate -- gate-level simulation; components must be from gates library\n.mode gate\n\n/*\nTests are sequences of lines supplying test values; .cycle specifies\nthe sequence of actions that will be performed for each test.  Available\nactions are\n   assert group -- set values for signals in group with H,L test values\n   deassert group -- stop setting values for signals in group with H,L test values\n   sample group -- check values of signals in group with 0,1 test values\n   tran time -- run simulation for specified time interval\n   signal=val -- set signal to specified value\n*/\n.cycle assert inputs tran 99n sample outputs tran 1n\n\n// the tests themselves -- one test per line\n//   to assert signal this cycle use 0,1; use Z or - if not to be asserted\n//   to sample signal this cycle use L,H; use - if not to be sampled\n// whitespace can be used to improve readability, non-blank characters\n// are associated, in order, with signals listed in .group above.\n\n// test reset:\n0 -\n//0 1 000 00000000000000000000000000000000\n\n\n\n\n// (optional) produce plots showing the test inputs and/or outputs\n.plot in, out, outx\n\n"]]},"invring":{"properties":{},"schematic":[["port",[-24,-128,2],{"signal":"CLK"}],["gates:nand2",[-168,-112,0]],["port",[-184,-96,0],{"signal":"RESETN"}],["wire",[-168,-112,0,0,-16]],["wire",[-56,-104,0,0,-24]],["gates:buffer",[-56,-128,0]],["gates:dreg",[-96,-176,0]],["gates:inverter",[-56,-176,0]],["port",[-24,-176,2],{"signal":"CLK2"}],["wire",[-96,-160,0,0,32]],["gates:mux2",[-128,-184,0]],["wire",[-184,-152,0,0,56]],["wire",[-168,-96,0,-16,0]],["ground",[-176,-168,0]],["port",[-56,-104,2],{"signal":"loop"}],["wire",[-24,-200,0,0,24]],["wire",[-56,-128,0,-40,0]],["wire",[-24,-200,0,-104,0]],["wire",[-128,-200,0,0,16]],["wire",[-128,-168,0,-48,0]],["gates:buffer",[-88,-104,0]],["gates:buffer",[-120,-104,0]],["wire",[-96,-128,0,-72,0]],["wire",[-112,-152,0,-8,0]],["wire",[-184,-152,0,64,0]]],"test":[["test","// set up Vdd, establish signaling voltages\n.power Vdd=1\n// Vol, Voh set voltages generated for input signals\n// Vil, Vih set voltage thresholds for determining logic values\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs RESETN\n.group outputs CLK\n// CLK0, CLK1, CLK2\n.cycle assert inputs tran 1n tran 9n\n0-\n1-\n1-\n1-\n1-\n1-\n1-\n1-\n\n\n.plot RESETN, CLK, CLK2\n//.plot CLK0, CLK1, CLK2\n.plot loop, Din, Q\n\n\n\n\n\n\n\n\n"]],"icon":[["circle",[-32,-16,0,8.246211251235321]],["line",[-36,-14,0,0,-4]],["line",[-36,-18,0,4,0]],["line",[-32,-18,0,0,4]],["line",[-32,-14,0,4,0]],["line",[-28,-14,0,0,-4]],["terminal",[-16,-16,2],{"name":"Z"}],["terminal",[-48,-16,0],{"name":"RESET"}]]},"FA":{"properties":{},"schematic":[["ward:ha",[-8,-16,0]],["port",[-16,-48,1],{"signal":"A"}],["port",[0,-32,2],{"signal":"Cin"}],["ward:ha",[-80,32,0]],["port",[-88,0,1],{"signal":"B"}],["gates:or2",[-88,48,2]],["wire",[-16,-16,0,0,32]],["wire",[-72,16,0,56,0]],["wire",[-32,-32,0,0,80]],["wire",[-32,48,0,-56,0]],["port",[-136,40,0],{"signal":"Cout"}],["port",[-136,16,0],{"signal":"S"}],["wire",[-104,16,0,-32,0]]],"icon":[["line",[-24,-24,0,0,40]],["line",[-24,-24,0,40,0]],["line",[16,-24,0,0,40]],["line",[16,16,0,-40,0]],["terminal",[-16,-32,1],{"name":"A"}],["terminal",[8,-32,1],{"name":"B"}],["terminal",[24,-8,2],{"name":"Cin"}],["terminal",[-32,-8,0],{"name":"Cout"}],["terminal",[-8,24,3],{"name":"S"}],["line",[-16,-16,0,0,24]],["line",[-16,-16,0,13,0]],["line",[-16,-5,0,7,0]],["line",[4,-16,0,-8,24]],["line",[4,-16,0,11,25]],["line",[-1,0,0,12,0]]],"test":[["test",".power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A B Cin\n.group outputs S Cout\n\n.cycle assert inputs tran 9n sample outputs tran 1n\n000 0 0\n001 1 0\n010 1 0\n011 0 1\n100 1 0\n101 0 1\n110 0 1\n111 1 1\n\n// check propagation delay:\n000 0 0\n111 1 1\n\n.plot A B Cin\n.plot S Cout\n"]]},"add4":{"properties":{},"schematic":[["ward:FA",[72,-16,0]],["ward:FA",[16,-16,0]],["ward:FA",[-40,-16,0]],["ward:FA",[-96,-16,0]],["port",[80,-48,1],{"signal":"A[0]"}],["port",[56,-48,1],{"signal":"B[0]"}],["port",[24,-48,1],{"signal":"A[1]"}],["port",[0,-48,1],{"signal":"B[1]"}],["port",[-32,-48,1],{"signal":"A[2]"}],["port",[-56,-48,1],{"signal":"B[2]"}],["port",[-88,-48,1],{"signal":"A[3]"}],["port",[-112,-48,1],{"signal":"B[3]"}],["port",[-104,8,3],{"signal":"S[3]"}],["port",[-48,8,3],{"signal":"S[2]"}],["port",[8,8,3],{"signal":"S[1]"}],["port",[64,8,3],{"signal":"S[0]"}],["port",[96,-24,2],{"signal":"Cin"}],["port",[-128,-24,0],{"signal":"Cout"}]],"icon":[["line",[-32,-16,0,0,16]],["line",[-32,-16,0,48,0]],["line",[16,-16,0,0,16]],["line",[16,0,0,-48,0]],["terminal",[-24,-24,1],{"name":"B[3:0]"}],["terminal",[8,-24,1],{"name":"A[3:0]"}],["terminal",[-8,8,3],{"name":"S[3:0]"}],["terminal",[-40,-8,0],{"name":"Cout"}],["terminal",[24,-8,2],{"name":"Cin"}],["line",[-16,-13,0,0,9]],["line",[-22,-8,0,11,0]],["line",[-7,-8,0,7,0]],["line",[-3,-14,0,0,11]],["line",[-3,-14,0,-4,6]]],"test":[["test",".power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A[3:0] B[3:0] Cin\n.group outputs S[3:0] Cout\n\n.mode gate\n\n.cycle assert inputs tran 9n sample outputs tran 1n\n\n// AAAA BBBB Cin SSSS Cout\n\n   0000 0000 0   0000 0\n   0001 0000 0   0001 0\n   0000 0001 0   0001 0\n   0001 0001 0   0010 0\n\n   1111 0000 0   1111 0\n   1111 0001 0   0000 1\n   0001 1111 0   0000 1\n   1111 1111 0   1110 1\n\n   0000 0000 1   0001 0\n   1111 0000 1   0000 1\n   0000 1111 1   0000 1\n\n.plot A[3:0] B[3:0] Cin\n.plot S[3:0] Cout\n"]]},"add16":{"properties":{},"schematic":[["port",[80,-40,1],{"signal":"A[3:0]"}],["port",[48,-40,1],{"signal":"B[3:0]"}],["port",[16,-40,1],{"signal":"A[7:4]"}],["port",[-16,-40,1],{"signal":"B[7:4]"}],["port",[-48,-40,1],{"signal":"A[11:8]"}],["port",[-80,-40,1],{"signal":"B[11:8]"}],["port",[-112,-40,1],{"signal":"A[15:12]"}],["port",[-144,-40,1],{"signal":"B[15:12]"}],["port",[-128,-8,3],{"signal":"S[15:12]"}],["port",[-64,-8,3],{"signal":"S[11:8]"}],["port",[0,-8,3],{"signal":"S[7:4]"}],["port",[64,-8,3],{"signal":"S[3:0]"}],["port",[96,-24,2],{"signal":"Cin"}],["port",[-160,-24,0],{"signal":"Cout"}],["ward:add4",[72,-16,0]],["ward:add4",[8,-16,0]],["ward:add4",[-56,-16,0]],["ward:add4",[-120,-16,0]]],"icon":[["line",[-32,-16,0,0,16]],["line",[-32,-16,0,48,0]],["line",[16,-16,0,0,16]],["line",[16,0,0,-48,0]],["terminal",[-24,-24,1],{"name":"B[15:0]"}],["terminal",[8,-24,1],{"name":"A[15:0]"}],["terminal",[-8,8,3],{"name":"S[15:0]"}],["terminal",[-40,-8,0],{"name":"Cout"}],["terminal",[24,-8,2],{"name":"Cin"}],["line",[-16,-13,0,0,9]],["line",[-22,-8,0,11,0]],["line",[-3,-14,0,0,11]],["line",[8,-14,0,-7,4]],["line",[1,-10,0,0,7]],["line",[1,-3,0,7,-1]],["line",[8,-4,0,0,-3]],["line",[8,-7,0,-7,-3]]],"test":[["test","// 16-bit ripple carry adder\n\n.power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A[15:0] B[15:0] Cin\n.group outputs S[15:0] Cout\n.mode gate\n.cycle assert inputs tran 9n sample outputs tran 1n\n\n// AAAAAAAAAAAAAAAA BBBBBBBBBBBBBBBB Cin SSSSSSSSSSSSSSSS Cout\n\n   0000000000000000 0000000000000000 0   0000000000000000 0\n   0000000000000001 0000000000000000 0   0000000000000001 0\n   0000000000000000 0000000000000001 0   0000000000000001 0\n   0000000000000001 0000000000000001 0   0000000000000010 0\n\n   1111111111111111 0000000000000000 0   1111111111111111 0\n   1111111111111111 0000000000000001 0   0000000000000000 1\n   0000000000000001 1111111111111111 0   0000000000000000 1\n   1111111111111111 1111111111111111 0   1111111111111110 1\n\n   0000000000000000 0000000000000000 1   0000000000000001 0\n   1111111111111111 0000000000000000 1   0000000000000000 1\n   0000000000000000 1111111111111111 1   0000000000000000 1\n\n.plot A[3:0] B[3:0] Cin\n.plot S[3:0] Cout\n"]]},"add32":{"properties":{},"schematic":[["port",[80,-40,1],{"signal":"A[15:0]"}],["port",[48,-40,1],{"signal":"B[15:0]"}],["port",[16,-40,1],{"signal":"A[31:16]"}],["port",[-16,-40,1],{"signal":"B[31:16]"}],["port",[0,-8,3],{"signal":"S[31:16]"}],["port",[64,-8,3],{"signal":"S[15:0]"}],["port",[96,-24,2],{"signal":"Cin"}],["port",[-32,-24,0],{"signal":"Cout"}],["ward:add16",[72,-16,0]],["ward:add16",[8,-16,0]]],"icon":[["line",[-32,-16,0,0,16]],["line",[-32,-16,0,48,0]],["line",[16,-16,0,0,16]],["line",[16,0,0,-48,0]],["terminal",[-24,-24,1],{"name":"B[15:0]"}],["terminal",[8,-24,1],{"name":"A[15:0]"}],["terminal",[-8,8,3],{"name":"S[15:0]"}],["terminal",[-40,-8,0],{"name":"Cout"}],["terminal",[24,-8,2],{"name":"Cin"}],["line",[-16,-13,0,0,9]],["line",[-22,-8,0,11,0]],["line",[-8,-12,0,2,-2]],["line",[-6,-14,0,5,0]],["line",[-1,-14,0,1,2]],["line",[0,-12,0,0,2]],["line",[0,-10,0,-2,2]],["line",[-2,-8,0,2,2]],["line",[0,-6,0,0,3]],["line",[0,-3,0,-2,1]],["line",[-2,-2,0,-3,0]],["line",[-5,-2,0,-2,0]],["line",[-7,-2,0,-1,-2]],["line",[3,-13,0,1,-1]],["line",[4,-14,0,4,0]],["line",[8,-14,0,2,2]],["line",[10,-12,0,0,4]],["line",[10,-8,0,-1,2]],["line",[9,-6,0,-6,4]],["line",[2,-2,0,8,0]]],"test":[["test","\n// 32-bit ripple carry adder\n\n.power Vdd=1\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\n\n.group inputs A[31:0] B[31:0] Cin\n.group outputs S[31:0] Cout\n.mode gate\n.cycle assert inputs tran 9n sample outputs tran 1n\n\n// AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB Cin SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS Cout\n\n   00000000000000000000000000000000 00000000000000000000000000000000 0   00000000000000000000000000000000 0\n   00000000000000000000000000000001 00000000000000000000000000000000 0   00000000000000000000000000000001 0\n   00000000000000000000000000000000 00000000000000000000000000000001 0   00000000000000000000000000000001 0\n   00000000000000000000000000000001 00000000000000000000000000000001 0   00000000000000000000000000000010 0\n\n   11111111111111111111111111111111 00000000000000000000000000000000 0   11111111111111111111111111111111 0\n   11111111111111111111111111111111 00000000000000000000000000000001 0   00000000000000000000000000000000 1\n   00000000000000000000000000000001 11111111111111111111111111111111 0   00000000000000000000000000000000 1\n   11111111111111111111111111111111 11111111111111111111111111111111 0   11111111111111111111111111111110 1\n\n   00000000000000000000000000000000 00000000000000000000000000000000 1   00000000000000000000000000000001 0\n   11111111111111111111111111111111 00000000000000000000000000000000 1   00000000000000000000000000000000 1\n   00000000000000000000000000000000 11111111111111111111111111111111 1   00000000000000000000000000000000 1\n\n.plot A[3:0] B[3:0] Cin\n.plot S[3:0] Cout\n"]]},"xor":{"properties":{},"test":[["test",""]]}}